/* _amgrid.scss */

$duration: 300ms;
$timing-fn: ease;
$turquoise: #1ABC9C;
$wet-asphalt: #34495E;
$midnight-blue: #2C3E50;
$clouds: #ECF0F1;

@mixin draw_box($size) {
    //@include draw_box('default')
    @if $size == "default" {
        perspective: 600px;
        width: 300px;
        height: 300px;
        margin: 7px;
    } @else if $size == "default_small" {    
        perspective: 600px;
        width: 220px;        
        height: 220px;
        margin: 7px;
    } @else if $size == "default_small_tall" {    
        perspective: 600px;
        width: 220px;        
        height: 320px;
        margin: 7px;
    } @else if $size == "four_tall" {    
        perspective: 640px;
        width: 23%;        
        height: 320px;
        margin: 1%;
    } @else if $size == "four_square" {    
        perspective: 640px;
        width: 23%;        
        height: 220px;
        margin: 1%;
    } @else if $size == "three_tall" {    
        perspective: 640px;
        width: 31%;        
        height: 320px;
        margin: 1%; 
    } @else if $size == "two_tall" {    
        perspective: 800px;
        width: 48%;        
        height: 300px;
        margin: 1%;
    } @else if $size == "one_square" {    
        perspective: 800px;
        width: 96%;        
        height: 300px;
        margin: 2%;             
    }
}


.devNote {
    background:red;
    // display:none;
}


.amgrid-wrap_all.list {
    ul.amgrid-ul {
        list-style: none;
        margin:0;
        padding:0;
      }
  }

.amgrid-wrap {

    /* sizes */
    ul.has-4-items {
        li {
            @media (min-width: $bp-md) {
                @include draw_box('default_small');
                &.tall {
                    @include draw_box('default_small_tall');                    
                }
            }
            @media (min-width: $bp-sm) and (max-width: $bp-md-1) {
                @include draw_box('four_square');
                &.tall {
                    @include draw_box('four_tall');                    
                }
            }
            @media (min-width: $bp-xs) and (max-width: $bp-sm-1) {
                @include draw_box('two_tall');
            }

            .info {
                h3 {
                    display:none;
                }
            }
        }
    }

    
    li {
        @media (min-width: $bp-md) {
            @include draw_box('default');
        }
        @media (min-width: $bp-tablet) and (max-width: $bp-md-1) {
            @include draw_box('three_tall');//medium_square
        }        
        @media (min-width: $bp-xs) and (max-width: $bp-tablet-1) {
            @include draw_box('two_tall');//xsmall_tall    
        }
        @media (max-width: $bp-xs-1) {
            @include draw_box('one_square');            
        }        
    }

    /* the important bits */
    .info {
        // hide-initial-state
        transform: rotate3d(1,0,0, 90deg);        
        width: 100%;
        height: 100%;
        padding: $offset-g1;
        position: absolute;
        top: 0;
        left: 0;
        z-index:2;
        overflow:hidden;
        border-radius: 4px;
        pointer-events: none;
        background-color: $color_primary;//transparentize($turquoise, .1);

        &:after {
            content:"";
            position:absolute;
            bottom:0;
            left:0;
            display:block;
            height:120px;
            width:100%;

            // background:$color_primary;
            background-image: -moz-linear-gradient(top, rgba(37, 34, 89,0), rgba(37, 34, 89,1));
            background-image: -webkit-gradient(linear, 0 0, 0 100%, from(rgba(37, 34, 89,0)), to(rgba(37, 34, 89,1)));
            background-image: -webkit-linear-gradient(top, rgba(37, 34, 89,0), rgba(37, 34, 89,1));
            background-image: -o-linear-gradient(top, rgba(37, 34, 89,0), rgba(37, 34, 89,1));
            background-image: linear-gradient(to bottom, rgba(37, 34, 89,0),rgba(37, 34, 89,1));
            background-repeat: repeat-x;
            border-bottom:30px solid $color_primary;
        }

        .quote {
            p {
                padding:0;
            }
        }
    }

    .in-top .info {
        transform-origin: 50% 0%;
        animation: in-top $duration $timing-fn 0ms 1 forwards;
    }
    .in-right .info {
        transform-origin: 100% 0%;
        animation: in-right $duration $timing-fn 0ms 1 forwards;
    }
    .in-bottom .info {
        transform-origin: 50% 100%;
        animation: in-bottom $duration $timing-fn 0ms 1 forwards;
    }
    .in-left .info {
        transform-origin: 0% 0%;
        animation: in-left $duration $timing-fn 0ms 1 forwards;
    }

    .out-top .info {
        transform-origin: 50% 0%;
        animation: out-top $duration $timing-fn 0ms 1 forwards;
    }
    .out-right .info {
        transform-origin: 100% 50%;
        animation: out-right $duration $timing-fn 0ms 1 forwards;
    }
    .out-bottom .info {
        transform-origin: 50% 100%;
        animation: out-bottom $duration $timing-fn 0ms 1 forwards;
    }
    .out-left .info {
        transform-origin: 0% 0%;
        animation: out-left $duration $timing-fn 0ms 1 forwards;
    }

    @keyframes in-top {
    from {transform: rotate3d(-1,0,0, 90deg)}
    to   {transform: rotate3d(0,0,0, 0deg)}}
    @keyframes in-right {
    from {transform: rotate3d(0,-1,0, 90deg)}
    to   {transform: rotate3d(0,0,0, 0deg)}}
    @keyframes in-bottom {
    from {transform: rotate3d(1,0,0, 90deg)}
    to   {transform: rotate3d(0,0,0, 0deg)}}
    @keyframes in-left {
    from {transform: rotate3d(0,1,0, 90deg)}
    to   {transform: rotate3d(0,0,0, 0deg)}}

    @keyframes out-top {
    from {transform: rotate3d(0,0,0, 0deg)}
    to   {transform: rotate3d(-1,0,0, 104deg)}}
    @keyframes out-right {
    from {transform: rotate3d(0,0,0, 0deg)}
    to   {transform: rotate3d(0,-1,0, 104deg)}}
    @keyframes out-bottom {
    from {transform: rotate3d(0,0,0, 0deg)}
    to   {transform: rotate3d(1,0,0, 104deg)}}
    @keyframes out-left {
    from {transform: rotate3d(0,0,0, 0deg)}
    to   {transform: rotate3d(0,1,0, 104deg)}}


    /* you can ignore this ones */
    ul {
        padding: 0;
        margin: 0 0 50px;
        list-style:none;
        text-align:center;

        &:after {
            content: "";
            display: table;
            clear: both;
        }
    }

    li {
        position: relative;
        // float: left;        
        overflow: hidden;
        // margin: 7px;
        padding: 0;
        list-style: none;
        display: inline-block;
        text-align:left;

        .img-bg {
            position:absolute;
            top:0;
            left:0;
            z-index:-1;
            width:100%;
            height:100%;
            
            &.has-img {
                background-color:$color_bg-body;
                background-repeat: no-repeat;
                background-position: center center; 
                background-size: cover;
                
            }

            // img{
            //     height: 100%;
            //     width: auto;
            //     min-width: 100%;
                
            //     -webkit-user-select: none;
            //     -khtml-user-select: none;
            //     -moz-user-select: none;
            //     -o-user-select: none;
            //     user-select: none;
            // }
        }
        
                  
        a.read-more-inner {
            pointer-events: all;
        }
        
        a.read-more,
        .a-dummy  {
            display:none;
            opacity: 0;
            transition: opacity 0.5s;
            display: block;
            // vertical-align: top;
            text-decoration: none;
            position:absolute;
            bottom:0;
            left:0;
            z-index:3;
            width:100%;
            height:50px;     
            padding:$offset-g1;
            background:transparent;


            color:white;  
        
            &:before {
                @extend .fa-dummy;
                content: "\f054" !important;
            }            
        }
        
        &.in-left,
        &.in-top,
        &.in-bottom,
        &.in-right {
            a,
            .a-dummy  {
                display:block;
                opacity: 1;
                transition: opacity 1s;                  
            }
        }

        p  {
            font-size: 12px;
            line-height: 1.5;
            color: white;//transparentize(#fff, .2);
        }

        h3 {
            color:white;
            font-size:1.2em;
        }

        .txt-wrap {
            position:absolute;
            bottom:0;
            left:0;
            z-index:0;
            background:transparent;
            background: linear-gradient(0deg, rgba(0,0,0,1) 0%, rgba(0,0,0,0) 100%);
            display:block;
            width:100%;
            padding:$offset-g1;
            text-align:left;

            span {                    
                color:white;
                display:block;

                &.name {
                    font-weight:bold;
                }
                &.title {

                }
            }
        }        

        &.basic:hover {
            .txt-wrap span {
                opacity:0;
                transition: opacity 0.5s;
            }
        }
        &:not(.basic):hover {
            .txt-wrap {
                display:none;
            }
        }
        
        .normal {
            width: 100%;
            height: 100%;
            background-color: transparent;// $clouds;
            text-align: left;
            font-size:1em;
            
            svg {
                pointer-events: none;
                width: 50px;
                path {
                    fill: transparentize($wet-asphalt, .8);
                }
            }
        }
    }
    /* (END) li */

    * {
        box-sizing: border-box;
    }

    .container {
        width: 100%;
        margin: 0 auto;
    }

}